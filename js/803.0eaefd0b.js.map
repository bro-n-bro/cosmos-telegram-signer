{"version":3,"file":"js/803.0eaefd0b.js","mappings":"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","sources":["webpack://cosmos-telegram-signer/./node_modules/idb/build/index.js","webpack://cosmos-telegram-signer/./src/utils/db.js","webpack://cosmos-telegram-signer/./src/components/Loader.vue","webpack://cosmos-telegram-signer/./src/components/Loader.vue?b8fd","webpack://cosmos-telegram-signer/./src/views/CreatePinPage.vue","webpack://cosmos-telegram-signer/./src/views/CreatePinPage.vue?baf1"],"sourcesContent":["const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n","import { openDB } from 'idb'\n\n\nconst dbPromise = openDB('bro_db', 1, {\n    upgrade(db) {\n        if (!db.objectStoreNames.contains('wallet')) {\n            db.createObjectStore('wallet')\n        }\n    }\n})\n\n\nexport async function getAllData(storeName) {\n    let db = await dbPromise\n\n    return db.getAll(storeName)\n}\n\n\nexport async function getData(storeName, key) {\n    let db = await dbPromise\n\n    return db.get(storeName, key)\n  }\n\n\nexport async function addData(storeName, data) {\n    let db = await dbPromise,\n        tx = db.transaction(storeName, 'readwrite'),\n        store = tx.objectStore(storeName)\n\n    for (let [key, value] of data) {\n        await store.put(value, key)\n    }\n\n    await tx.done\n}\n\n\nexport async function deleteData(storeName, id) {\n    let db = await dbPromise\n\n    return db.delete(storeName, id)\n}\n\n\nexport async function updateData(storeName, id, updatedData) {\n    let db = await dbPromise\n\n    return db.put(storeName, { ...updatedData, id })\n}","<template>\n    <div class=\"loader_wrap\">\n        <div class=\"loader\"><span></span></div>\n    </div>\n</template>\n\n\n<style>\n    .loader_wrap\n    {\n        position: absolute;\n        z-index: 7;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        background: rgba(0, 0, 0, .65);\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .loader\n    {\n        position: relative;\n\n        width: 32px;\n        height: 32px;\n        margin: 0 auto;\n    }\n\n\n    .loader span\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n    }\n\n    .loader span::before,\n    .loader span::after\n    {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        margin: auto;\n\n        content: '';\n        animation: loader-1 1.5s cubic-bezier(.075, .820, .165, 1.000) infinite;\n\n        opacity: 0;\n        border: 2px solid #fff;\n        border-radius: 50%;\n    }\n\n    .loader span::after\n    {\n        animation: loader-2 1.5s cubic-bezier(.075, .820, .165, 1.000) .25s infinite;\n    }\n\n\n    @-webkit-keyframes loader-1\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-1\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1.5);\n\n            opacity: 0;\n        }\n    }\n\n\n    @-webkit-keyframes loader-2\n    {\n        0%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            -webkit-transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n    @keyframes loader-2\n    {\n        0%\n        {\n            transform: translate3d(0, 0, 0) scale(0);\n\n            opacity: 1;\n        }\n\n        100%\n        {\n            transform: translate3d(0, 0, 0) scale(1);\n\n            opacity: 0;\n        }\n    }\n\n</style>","import { render } from \"./Loader.vue?vue&type=template&id=733e33a2\"\nconst script = {}\n\nimport \"./Loader.vue?vue&type=style&index=0&id=733e33a2&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <Loader v-if=\"loading\" />\n\n    <section class=\"page_container careate_pin_page\" v-else>\n        <div class=\"cont\">\n            <div class=\"page_title\">Name your wallet</div>\n\n            <router-link to=\"/create_wallet\" class=\"back_btn\">\n                <!-- <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg> -->\n                <span>Back</span>\n            </router-link>\n\n\n            <div class=\"wallet_name\">\n                <div class=\"label\">Wallet name:</div>\n\n                <div class=\"field\">\n                    <input type=\"text\" class=\"input\" v-model=\"walletName\" placeholder=\"name\">\n                </div>\n            </div>\n\n\n            <div class=\"create_pin\">\n                <div class=\"label\">Create pin:</div>\n\n                <div class=\"row\">\n                    <div class=\"field\">\n                        <input type=\"text\" class=\"input\" v-model=\"pinCode[0]\" maxlength=\"1\"\n                            @input=\"moveFocus($event, 1)\"\n                            @keydown.backspace=\"moveBack($event, 0)\">\n                    </div>\n\n                    <div class=\"field\">\n                        <input type=\"text\" class=\"input\" v-model=\"pinCode[1]\" maxlength=\"1\" :disabled=\"!pinCode[0].length\"\n                            @input=\"moveFocus($event, 2)\"\n                            @keydown.backspace=\"moveBack($event, 1)\">\n                    </div>\n\n                    <div class=\"field\">\n                        <input type=\"text\" class=\"input\" v-model=\"pinCode[2]\" maxlength=\"1\" :disabled=\"!pinCode[1].length\"\n                            @input=\"moveFocus($event, 3)\"\n                            @keydown.backspace=\"moveBack($event, 2)\">\n                    </div>\n\n                    <div class=\"field\">\n                        <input type=\"text\" class=\"input\" v-model=\"pinCode[3]\" maxlength=\"1\" :disabled=\"!pinCode[2].length\"\n                            @input=\"moveFocus($event, 4)\"\n                            @keydown.backspace=\"moveBack($event, 3)\">\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"confirm_pin\">\n                <div class=\"label\">Repeat pin:</div>\n\n                <div class=\"row\" :class=\"{ error: confirmPinCode[3].length && !isPinMatching, success: confirmPinCode[3].length && isPinMatching }\">\n                    <div class=\"field\">\n                        <input type=\"text\" class=\"input\" v-model=\"confirmPinCode[0]\" maxlength=\"1\" :disabled=\"!pinCode[3].length\"\n                            @input=\"moveFocus($event, 1)\"\n                            @keydown.backspace=\"moveBack($event, 0)\">\n                    </div>\n\n                    <div class=\"field\">\n                        <input type=\"text\" class=\"input\" v-model=\"confirmPinCode[1]\" maxlength=\"1\" :disabled=\"!confirmPinCode[0].length\"\n                            @input=\"moveFocus($event, 2)\"\n                            @keydown.backspace=\"moveBack($event, 1)\">\n                    </div>\n\n                    <div class=\"field\">\n                        <input type=\"text\" class=\"input\" v-model=\"confirmPinCode[2]\" maxlength=\"1\" :disabled=\"!confirmPinCode[1].length\"\n                            @input=\"moveFocus($event, 3)\"\n                            @keydown.backspace=\"moveBack($event, 2)\">\n                    </div>\n\n                    <div class=\"field\">\n                        <input type=\"text\" class=\"input\" v-model=\"confirmPinCode[3]\" maxlength=\"1\" :disabled=\"!confirmPinCode[2].length\"\n                            @input=\"moveFocus($event, 4)\"\n                            @keydown.backspace=\"moveBack($event, 3)\">\n                    </div>\n                </div>\n            </div>\n\n\n            <button class=\"biometric_btn\">\n                <!-- <svg class=\"icon\"><use xlink:href=\"#/assets/sprite.svg#ic_\"></use></svg> -->\n                <span>Turn on biometric security</span>\n            </button>\n\n\n            <div class=\"btns\">\n                <button class=\"btn\" :class=\"{ disabled: !confirmPinCode[3].length || !isPinMatching }\" @click.prevent=\"save\">\n                    {{ $t('message.btn_next') }}\n                </button>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, ref, computed } from 'vue'\n    import { useRouter } from 'vue-router'\n    import { addData } from '@/utils/db'\n\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n\n\n    const router = useRouter(),\n        loading = ref(true),\n        walletName = ref(''),\n        pinCode = ref(['', '', '', '']),\n        confirmPinCode = ref(['', '', '', ''])\n\n\n    onBeforeMount(() => {\n        // Hide loader\n        loading.value = false\n    })\n\n\n    // Move focus\n    function moveFocus(event, nextIndex) {\n        if (event.target.value.length >= 1 && nextIndex < 4) {\n            event.target.closest('.row').querySelector(`.field:nth-child(${nextIndex + 1}) input`).focus()\n        }\n    }\n\n\n    // Move back\n    function moveBack(event, currentIndex) {\n        setTimeout(() => {\n            if (event.target.value.length === 0 && currentIndex > 0) {\n                event.target.closest('.row').querySelector(`.field:nth-child(${currentIndex}) input`).select()\n            }\n        })\n    }\n\n\n    // Validate pin code\n    const isPinMatching = computed(() => {\n        return pinCode.value.join('') === confirmPinCode.value.join('')\n    })\n\n\n    // Save data\n    async function save() {\n        // Save in DB\n        await addData('wallet', [\n            ['pin', pinCode.value.join('')],\n            ['name', walletName.value]\n        ])\n\n        // Go to confirm\n        router.push('/wallet_created')\n    }\n</script>\n\n\n<style scoped>\n.label\n{\n    margin-bottom: 5px;\n    padding: 0 10px;\n}\n\n\n.input\n{\n    font-family: var(--font_family);\n\n    display: block;\n    flex-shrink: var(--font-size);\n\n    width: 100%;\n    height: 40px;\n    padding: 0 9px;\n\n    color: #fff;\n    border: 1px solid #fff;\n    border-radius: 10px;\n    background: none;\n}\n\n\n.input:disabled\n{\n    opacity: .5;\n}\n\n\n.error .input\n{\n    border-color: red;\n}\n\n.success .input\n{\n    border-color: green;\n}\n\n\n.create_pin,\n.confirm_pin\n{\n    margin-top: 8px;\n}\n\n\n.create_pin .row,\n.confirm_pin .row\n{\n    margin-left: -14px;\n}\n\n\n.create_pin .row > *,\n.confirm_pin .row > *\n{\n    width: calc(25% - 14px);\n    margin-left: 14px;\n}\n\n\n\n.biometric_btn\n{\n    display: flex;\n    align-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    margin: 20px auto 0;\n}\n\n\n\n.btns\n{\n    margin-top: auto;\n    padding-top: 24px;\n}\n\n\n.btns .btn\n{\n    display: flex;\n    align-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    width: 100%;\n    height: 50px;\n\n    text-align: center;\n    text-decoration: none;\n\n    color: #fff;\n    border: 1px solid;\n    border-radius: 10px;\n}\n\n\n.btns .btn.disabled\n{\n    pointer-events: none;\n\n    opacity: .5;\n}\n\n\n</style>","import script from \"./CreatePinPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreatePinPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CreatePinPage.vue?vue&type=style&index=0&id=4ed913f4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4ed913f4\"]])\n\nexport default __exports__"],"names":["instanceOfAny","object","constructors","some","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBDatabase","IDBObjectStore","IDBIndex","IDBCursor","IDBTransaction","getCursorAdvanceMethods","prototype","advance","continue","continuePrimaryKey","transactionDoneMap","WeakMap","transformCache","reverseTransformCache","promisifyRequest","request","promise","Promise","resolve","reject","unlisten","removeEventListener","success","error","wrap","result","addEventListener","set","cacheDonePromiseForTransaction","tx","has","done","complete","DOMException","idbProxyTraps","get","target","prop","receiver","objectStoreNames","undefined","objectStore","value","replaceTraps","callback","wrapFunction","func","includes","args","apply","unwrap","this","transformCachableValue","Proxy","IDBRequest","newValue","openDB","name","version","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","transaction","then","db","catch","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","async","storeName","store","index","shift","all","oldTraps","advanceMethodProps","methodMap","advanceResults","ittrProxiedCursorToOriginalProxy","cursorIteratorTraps","cachedFunc","iterate","cursor","openCursor","proxiedCursor","delete","isIteratorProp","Symbol","asyncIterator","dbPromise","contains","createObjectStore","getData","key","addData","data","put","class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","router","useRouter","loading","ref","walletName","pinCode","confirmPinCode","moveFocus","nextIndex","length","closest","querySelector","focus","moveBack","currentIndex","setTimeout","select","onBeforeMount","isPinMatching","computed","join","save","push"],"sourceRoot":""}