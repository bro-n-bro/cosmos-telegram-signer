{"version":3,"file":"js/581.83c30fe2.js","mappings":"owCA4KI,MAAMA,GAASC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAAI,GACdC,GAAYD,EAAAA,EAAAA,IAAI,GAChBE,GAASF,EAAAA,EAAAA,IAAI,MACbG,GAASH,EAAAA,EAAAA,IAAI,IACbI,GAAaJ,EAAAA,EAAAA,IAAI,IACjBK,IAAoBL,EAAAA,EAAAA,KAAI,GACxBM,IAAsBN,EAAAA,EAAAA,KAAI,GAkB9B,SAASO,GAAYC,GAEjB,IAAIC,EAAgBD,EAAEC,eAAiBC,OAAOD,cAC1CE,EAAaF,EAAcG,QAAQ,QACnCC,EAAgBF,EAAWG,MAAM,KAET,IAAxBD,EAAcE,SAEdd,EAAUe,MAAQ,EAGlBC,YAAW,IAAMd,EAAOa,MAAQH,KAGR,IAAxBA,EAAcE,SAEdd,EAAUe,MAAQ,EAGlBC,YAAW,IAAMd,EAAOa,MAAQH,IAExC,CAIA,SAASK,GAAaV,GAClB,IAAIW,EAAS,GAGbX,EAAEY,OAAOJ,MAAMK,OAAON,OAChBI,EAAOG,MAAK,GACZH,EAAOG,MAAK,GAGlB,IAAIC,EAAQ,WAEZJ,EAAOG,KAAKC,EAAMC,KAAKhB,EAAEY,OAAOJ,MAAMK,SAIlCF,EAAOM,OAAMT,IAAmB,IAAVA,KACtBR,EAAEY,OAAOM,UAAUC,OAAO,SAC1BnB,EAAEY,OAAOM,UAAUE,IAAI,aAEvBpB,EAAEY,OAAOM,UAAUC,OAAO,WAC1BnB,EAAEY,OAAOM,UAAUE,IAAI,SAE/B,CAIA,SAASC,KAELzB,EAAWY,MAAMK,OAAON,OAClBV,GAAkBW,OAAQ,EAC1BX,GAAkBW,OAAQ,EAGhCV,GAAoBU,OAAQ,CAChC,EA1EAc,EAAAA,EAAAA,KAAcC,UAEVhC,EAAQiB,OAAQ,CAAK,KAIzBgB,EAAAA,EAAAA,IAAM/B,GAAW,KAEbE,EAAOa,MAAQ,GACfZ,EAAWY,MAAQ,GACnBV,GAAoBU,OAAQ,CAAK,IAoErC,MAAMiB,IAAcC,EAAAA,EAAAA,KAAS,KACzB,IAAIf,GAAS,EAEb,OAAQlB,EAAUe,OACd,KAAK,EACDG,EAAiC,KAAxBhB,EAAOa,MAAMD,QAAiBZ,EAAOa,MAAMS,OAAMU,GAAa,KAAPA,IAChE,MAEJ,KAAK,EACDhB,EAAiC,KAAxBhB,EAAOa,MAAMD,QAAiBZ,EAAOa,MAAMS,OAAMU,GAAa,KAAPA,IAChE,MAEJ,QACIhB,EAASd,GAAkBW,MAC3B,MAGR,OAAOG,CAAM,IAKjBY,eAAeK,KAGLlC,EAAOc,MADA,GAAbf,QAC2BoC,EAAAA,EAAAA,IAAyBlC,EAAOa,MAAMsB,KAAK,YAC3CC,EAAAA,EAAAA,IAA2BnC,EAAWY,aAG3DwB,EAAAA,EAAAA,IAAQ,SAAU,CACpB,CAAC,SAAUtC,EAAOc,MAAMb,OAAOsC,MAC/B,CAAC,OAAQvC,EAAOc,MAAM0B,QAI1B7C,EAAOyB,KAAK,yBAChB,C,i0MClSJ,MAAMqB,IAA2B,QAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://cosmos-telegram-signer/./src/views/ImportWalletPage.vue","webpack://cosmos-telegram-signer/./src/views/ImportWalletPage.vue?8fc1"],"sourcesContent":["<template>\n    <section class=\"page_container import_wallet_page\">\n        <div class=\"cont\">\n            <div class=\"page_title\">\n                {{ $t('message.import_wallet_title') }}\n            </div>\n\n            <div class=\"page_data_wrap\">\n                <div class=\"page_data\">\n                    <Loader v-if=\"loading\" />\n\n                    <template v-else>\n                    <router-link class=\"back_btn\" to=\"/\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arrow_hor\"></use></svg>\n                    </router-link>\n\n                    <div class=\"tabs_wrap\">\n                        <div class=\"tabs\">\n                            <button class=\"btn\" @click.prevent=\"activeTab = 1\" :class=\"{ active: activeTab === 1 }\">\n                                <span>{{ $t('message.mnemonic_tab1') }}</span>\n                            </button>\n\n                            <button class=\"btn\" @click.prevent=\"activeTab = 2\" :class=\"{ active: activeTab === 2 }\">\n                                <span>{{ $t('message.mnemonic_tab2') }}</span>\n                            </button>\n\n                            <button class=\"btn\" @click.prevent=\"activeTab = 3\" :class=\"{ active: activeTab === 3 }\">\n                                <span>{{ $t('message.mnemonic_tab3') }}</span>\n                            </button>\n                        </div>\n                    </div>\n\n                    <div class=\"mnemonic\" v-if=\"activeTab != 3\">\n                        <div class=\"row\">\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[0]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[1]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[2]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[3]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[4]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[5]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[6]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[7]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[8]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[9]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[10]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[11]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[12]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[13]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[14]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[15]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[16]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[17]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[18]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[19]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[20]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[21]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[22]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n\n                            <div class=\"word\" v-if=\"activeTab === 2\">\n                                <input type=\"text\" class=\"input\" v-model=\"secret[23]\" @input=\"validateWord\" @paste=\"handlePaste\">\n                            </div>\n                        </div>\n\n                        <div class=\"exp\">\n                            {{ $t('message.import_wallet_exp') }}\n                        </div>\n                    </div>\n\n\n                    <div class=\"private_key\" v-else>\n                        <div class=\"field\">\n                            <input type=\"text\" class=\"input big\" v-model=\"privateKey\" :class=\"{ error: !idValidPrivateKey && isTouchedPrivateKey, success: idValidPrivateKey && isTouchedPrivateKey }\" @input=\"validatePrivateKey\">\n                        </div>\n\n                        <div class=\"exp\">\n                            {{ $t('message.import_wallet_exp') }}\n                        </div>\n                    </div>\n\n\n                    <div class=\"btns\">\n                        <button class=\"btn\" :class=\"{ disabled: !isFormValid }\" @click.prevent=\"save\">\n                            <span>{{ $t('message.btn_next') }}</span>\n                        </button>\n                    </div>\n                    </template>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, onBeforeMount, watch, computed } from 'vue'\n    import { useRouter } from 'vue-router'\n    import { importWalletFromMnemonic, importWalletFromPrivateKey } from '@/utils/'\n    import { addData } from '@/utils/db'\n\n\n    // Components\n    import Loader from '@/components/Loader.vue'\n\n\n    const router = useRouter(),\n        loading = ref(true),\n        activeTab = ref(1),\n        wallet = ref(null),\n        secret = ref([]),\n        privateKey = ref(''),\n        idValidPrivateKey = ref(false),\n        isTouchedPrivateKey = ref(false)\n\n\n    onBeforeMount(async () => {\n        // Hide loader\n        loading.value = false\n    })\n\n\n    watch(activeTab, () => {\n        // Reset data\n        secret.value = []\n        privateKey.value = ''\n        isTouchedPrivateKey.value = false\n    })\n\n\n    // Event handler for pasting text from clipboard\n    function handlePaste(e) {\n        // Get data from the clipboard\n        let clipboardData = e.clipboardData || window.clipboardData,\n            pastedText = clipboardData.getData('text'),\n            pastedTextArr = pastedText.split(' ')\n\n        if (pastedTextArr.length == 12) {\n            // Set active tab\n            activeTab.value = 1\n\n            // Set secret\n            setTimeout(() => secret.value = pastedTextArr)\n        }\n\n        if (pastedTextArr.length == 24) {\n            // Set active tab\n            activeTab.value = 2\n\n            // Set secret\n            setTimeout(() => secret.value = pastedTextArr)\n        }\n    }\n\n\n    // Validate word\n    function validateWord(e) {\n        let result = []\n\n        // Validate length\n        e.target.value.trim().length\n            ? result.push(true)\n            : result.push(false)\n\n        // Validate symbols\n        let regex = /^[a-z]+$/\n\n        result.push(regex.test(e.target.value.trim()))\n\n\n        // Set class\n        if (result.every(value => value === true)) {\n            e.target.classList.remove('error')\n            e.target.classList.add('success')\n        } else {\n            e.target.classList.remove('success')\n            e.target.classList.add('error')\n        }\n    }\n\n\n    // Validate private key\n    function validatePrivateKey() {\n        // Validate length\n        privateKey.value.trim().length\n            ? idValidPrivateKey.value = true\n            : idValidPrivateKey.value = false\n\n        // Touched status\n        isTouchedPrivateKey.value = true\n    }\n\n\n    // Validate form\n    const isFormValid = computed(() => {\n        let result = false\n\n        switch (activeTab.value) {\n            case 1:\n                result = secret.value.length === 12 && secret.value.every(el => el !== '')\n                break;\n\n            case 2:\n                result = secret.value.length === 24 && secret.value.every(el => el !== '')\n                break;\n\n            default:\n                result = idValidPrivateKey.value\n                break;\n        }\n\n        return result\n    })\n\n\n    // Save data\n    async function save() {\n        // Import wallet\n        activeTab != 3\n            ? wallet.value = await importWalletFromMnemonic(secret.value.join(' '))\n            : wallet.value = await importWalletFromPrivateKey(privateKey.value)\n\n        // Save in DB\n        await addData('wallet', [\n            ['secret', wallet.value.secret.data],\n            ['seed', wallet.value.seed]\n        ])\n\n        // Go to confirm\n        router.push('/create_wallet_confirm')\n    }\n</script>\n\n\n<style scoped>\n    .tabs_wrap\n    {\n        margin-top: 54px;\n    }\n\n\n\n    .exp\n    {\n        font-size: 12px;\n\n        margin-top: 8px;\n    }\n</style>","import script from \"./ImportWalletPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ImportWalletPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ImportWalletPage.vue?vue&type=style&index=0&id=6b938735&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6b938735\"]])\n\nexport default __exports__"],"names":["router","useRouter","loading","ref","activeTab","wallet","secret","privateKey","idValidPrivateKey","isTouchedPrivateKey","handlePaste","e","clipboardData","window","pastedText","getData","pastedTextArr","split","length","value","setTimeout","validateWord","result","target","trim","push","regex","test","every","classList","remove","add","validatePrivateKey","onBeforeMount","async","watch","isFormValid","computed","el","save","importWalletFromMnemonic","join","importWalletFromPrivateKey","addData","data","seed","__exports__"],"sourceRoot":""}